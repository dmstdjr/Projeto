* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --text-color: white;
  --bg-url: url(assets/bg-mobile.jpg);
  --stroke-color: rgba(255, 255, 255, 0.5);
  --surface-color: rgba(255, 255, 255, 0.1);
  --surface-color-hover: rgba(255, 255, 255, 0.05);
  --highlight-color: rgba(255, 255, 255, 0.2);
  --switch-bg-url: url(/assets/moon-stars.svg);
}

.light {
  --text-color: black;
  --bg-url: url(assets/bg-mobile-light.jpg);
  --stroke-color: rgba(0, 0, 0, 0.5);
  --surface-color: rgba(0, 0, 0, 0.05);
  --surface-color-hover: rgba(0, 0, 0, 0.02);
  --highlight-color: rgba(0, 0, 0, 0.1);
  --switch-bg-url: url(/assets/sun.svg);
}

body {
  /*
  background-image: url(assets/bg-mobile.jpg);
  background-repeat: no-repeat;
  background-position: top center;
  background-size: cover;
  */
  /*background: color image repeat position/size*/
  background: var(--bg-url) no-repeat top center/cover;
}

body * {
  font-family: "Inter", sans-serif;
  color: var(--text-color);
}

#container {
  width: 360px;
  /*
  margin-right: auto;
  margin-left: auto;
  reponsavel por alinhar o conteudo, que pode ser resumido so em margin, sendo arrumado em todos os lados, top, bottom, left e right mas por causa do css não é aplicado no top nem bottom
  */
  margin: 56px auto 0px;
  /*
  margin funciona para todos os lados em forma de relogio girando em sentido horario, sendo o primeiro o top, depois right, bottom e left
  */
  padding: 0 24px;
}

/* Profile */
#profile {
  text-align: center;
  /*
Comando que possibilita o alinhamento de elementos display: inline, e não afeta display: block
  */
  padding: 24px;
}

#profile img {
  width: 112px;
  /*
  posso alinhar a img, transformando ela em display: block e dai sim colocar o margin: auto, porque display inline, não aceita o margin
  */
}

#profile p {
  font-weight: 500;
  line-height: 24px;
  margin-top: 8px;
}

/* Switch */

#switch {
  position: relative;
  width: 64px;

  margin: 4px auto;
}

#switch button {
  width: 32px;
  height: 32px;
  background: white var(--switch-bg-url) no-repeat center;
  border: 0;
  border-radius: 50%;

  top: 50%;
  position: absolute;
  left: 0;
  z-index: 1;
  transform: translateY(-50%);
}

.light #switch button {
  right: 0;
  left: initial;
}

#switch span {
  display: block;
  width: 64px;
  height: 24px;
  background: var(--surface-color);
  border: 1px solid var(--stroke-color);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px); 
  border-radius: 9999px;
}

/*Links*/

ul {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 16px;
  padding: 24px 0;
}
/* display flex, é uma maneira flexivel de colocar elementos seu padrao ja é row, mas pode ser colocado como column, e quando colocado gap os espaços ficam entre os elementos*/

ul li a {
  /*flex-direction: row; não faz sentido ser colocado em row, pois ja é o padrao. Nem o Gap pois nao tem mais nenhum conteudo dentro do "a"*/
  display: flex;
  justify-content: center;
  align-items: center;

  padding: 16px 24px;

  border-radius: 8px;
  background: var(--surface-color);
  border: 1px solid var(--stroke-color);

  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);

  text-decoration: none;
  font-weight: 500;

  transition: bakcgrouns 0.2s;
}

/* hoover é um pseudo-selector */
ul li a:hover {
  background: var(--surface-color-hover);
  border: 1px solid var(--text-color);
}

#social-links {
  display: flex;
  justify-content: center;
  padding: 24px 0;
  font-size: 24px;
}

#social-links a {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 16px;

  transition: 0.2s;
  border-radius: 50%;
}

#social-links a:hover {
  background: var(--highlight-color);
}

footer {
  padding: 24px 0;
  text-align: center;
  font-size: 14px;
}
